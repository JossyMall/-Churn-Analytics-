# /io/.htaccess

RewriteEngine On
# Set the base URL for rewrite rules. This is crucial as your project is in a subdirectory.
RewriteBase /io/

# Rule to specifically handle API requests
# It rewrites any request starting with 'api/' to 'api/index.php/' followed by the original path.
# The [L] flag means 'Last Rule' (stop processing further rules if this one matches).
# The [PT] flag means 'Pass Through', which ensures the rewritten URL is treated
# as a new request by the next handler (PHP), allowing PHP to see the full path_info.
RewriteRule ^api/(.*)$ api/index.php/$1 [L,PT]

# Optional: If you also want clean URLs for your main application (e.g., your homepage, dashboard)
# where requests like /io/dashboard map to /io/index.php/dashboard, you'd add similar rules.
# For example:
# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteCond %{REQUEST_FILENAME} !-d
# RewriteRule ^(.*)$ index.php/$1 [L,PT]

# Security Headers (Highly Recommended for any web application)
# These improve the security posture of your application against common web vulnerabilities.
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-XSS-Protection "1; mode=block"
    Header always append X-Frame-Options "DENY"
    # Consider a Content Security Policy (CSP) for robust XSS protection.
    # It's more complex and requires careful configuration, but very powerful.
    # Header set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data:;"
</IfModule>

# PHP Configuration (Optional: useful for debugging and session lifetime)
# You can adjust these values based on your specific requirements.
<IfModule mod_php.c>
    # Display PHP errors directly in the browser for debugging. Set to Off in production.
    php_value display_errors On
    # Report all types of errors.
    php_value error_reporting E_ALL
    # Set the maximum lifetime for session data on the server (in seconds).
    # 864000 seconds = 10 days (for your "indefinite login" requirement).
    php_value session.gc_maxlifetime 864000
    # Set the lifetime of the session cookie on the client side (in seconds).
    # This keeps the user logged in for the specified duration without activity.
    php_value session.cookie_lifetime 864000
</IfModule>